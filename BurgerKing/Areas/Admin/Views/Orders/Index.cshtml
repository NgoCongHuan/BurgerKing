@using BurgerKing.Models;
@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList<Order>

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper">
    <div class="page-header">
        <button id="button-create" type="button" class="btn btn-gradient-primary btn-icon-text">
            <i class="mdi mdi-library-plus btn-icon-prepend"></i>Create
        </button>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="#">Tables</a></li>
                <li class="breadcrumb-item active" aria-current="page">Basic tables</li>
            </ol>
        </nav>
    </div>
    <div class="row">
        <div class="col-lg-12 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Product</h4>
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.First().OrderId)</th>
                                    <th>@Html.DisplayNameFor(model => model.First().OrderDate)</th>
                                    <th>@Html.DisplayNameFor(model => model.First().PaymentType)</th>
                                    <th>@Html.DisplayNameFor(model => model.First().CustomerPhone)</th>
                                    <th>@Html.DisplayNameFor(model => model.First().Status)</th>
                                    <th>Edit</th>
                                    <th>Detail</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@Html.DisplayFor(modelItem => item.OrderId)</td>
                                        <td>@Html.DisplayFor(modelItem => item.OrderDate)</td>
                                        <td>@Html.DisplayFor(modelItem => item.PaymentType)</td>
                                        <td>@Html.DisplayFor(modelItem => item.CustomerPhone)</td>
                                        @if (item.Status == OrderStatus.Completed) 
                                        { 
                                            <td><label class="badge badge-success">@Html.DisplayFor(modelItem => item.Status)</label></td>
                                        }
                                        @if (item.Status == OrderStatus.Canceled) 
                                        { 
                                            <td><label class="badge badge-danger">@Html.DisplayFor(modelItem => item.Status)</label></td>
                                        }
                                        @if (item.Status == OrderStatus.Processing) 
                                        { 
                                            <td><label class="badge badge-warning">@Html.DisplayFor(modelItem => item.Status)</label></td>
                                        }
                                        <td>@Html.ActionLink("Edit", "Edit", new { id = item.OrderId })</td>
                                        <td>@Html.ActionLink("Details", "Details", new { id = item.OrderId })</td>
                                    </tr>

                                }
                            </tbody>

                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="table-responsive">
        Total items: @Model.TotalItemCount
        <br />
        Page @(Model.PageCount < @Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions
        {
            LiElementClasses = new[] { "btn btn-outline-warning mt-2" },
            MaximumPageNumbersToDisplay = 3
        })
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script type="text/javascript">
    console.log('123')
</script>
<script>
    $(document).ready(function () {
        $("#button-create").click(function () {
            window.location.href = '@Url.Action("Create", "Orders")';
        });
    });
</script>
<script>
    $(document).ready(function () {
        // Sự kiện click cho tất cả các nút có lớp CSS "btn-outline-warning"
        $('.btn-outline-warning').on('click', function () {
            // Lấy số trang từ văn bản nút
            var pageNumber = $(this).text();

            // Chuyển hướng tới trang tương ứng
            window.location.href = '@Url.Action("Index")' + '?page=' + pageNumber;
        });
    });
</script>