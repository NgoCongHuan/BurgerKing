@model BurgerKing.Models.Account
@using BurgerKing.Models;
@using Newtonsoft.Json;

@{
    ViewBag.Title = "Delete";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    string accountInfo = Request.Cookies["AccountInfo"]?.Value;

    if (!string.IsNullOrEmpty(accountInfo))
    {
        Account acc = JsonConvert.DeserializeObject<Account>(accountInfo);

        if (acc != null)
        {
            ViewBag.Name = acc.Name;
            ViewBag.Id = acc.Id;
            ViewBag.Phone = acc.Phone;
        }
    }
}

<style>
    .option {
        text-align: left;
        padding: 15px 10px;
        color: #333;
        transition: background-color 0.6s ease, color 0.3s ease;
    }


        .option:hover {
            background-color: #fea116;
            color: #fff;
        }

    .card-header {
        background-color: #fea116;
        color: #fff;
        border: 1px solid #fea116;
        font-size: 20px;
        font-weight: bold;
    }

    .square-image {
        width: 100%;
        height: 0;
        padding-bottom: 100%; /* Điều này giữ cho chiều cao bằng với chiều rộng, tạo hình vuông */
        position: relative;
    }

        .square-image img {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover; /* Điều này làm cho hình ảnh tự động cắt để fit vào kích thước của phần tử cha */
        }
</style>

@using (Html.BeginForm("Index", "Customer", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @ViewBag.msg
    <div class="container profile-container">
        <div class="text-center wow fadeInUp" data-wow-delay="0.1s">
            <h5 class="section-title ff-secondary text-center text-primary fw-normal">Tài khoản</h5>
            <h1 class="mb-5">Thông tin tài khoản</h1>
        </div>
        <div class="row">
            <!-- Cột Thông tin tài khoản (col-3) -->
            <div class="col-md-3">
                <div class="card">
                    <div class="text-center">
                        <input type="file" class="form-control file-upload-info" name="ImageFile" required="required" id="file" onchange="displayImage(this)" style="background-color: #fff; padding: 0.94rem 1.375rem; color: #212529; border: 1px solid #ebedf2; width: 100% !important;" />
                        <div style="padding: 20px 20px">
                            <div class="rounded-circle overflow-hidden square-image">
                                <img id="previewImage" class="img-fluid" src="~/images/@Html.DisplayFor(model => model.Image)" alt="Preview Image" style="width: 100%; height: auto;" />
                            </div>
                        </div>
                        <h5 class="mb-0">@ViewBag.Name</h5>
                        <small>@ViewBag.Phone </small>
                    </div>
                    <div class="row card-body">
                        <!-- Nội dung Thông tin tài khoản -->
                        <a class="option" href="@Url.Action("Index","Customer", new { id = ViewBag.Id})">Thông tin tài khoản</a>
                        <a class="option" href="@Url.Action("OrderHistory","Customer", new { id = ViewBag.Id})">Lịch sử đơn hàng</a>
                    </div>
                </div>
            </div>

            <!-- Cột Lịch sử đơn hàng (col-9) -->
            <div class="col-md-9">
                <div class="card">
                    <div class="card-header">
                        Thông tin tài khoản
                    </div>
                    <div class="card-body">
                        <!-- Nội dung Lịch sử đơn hàng -->
                        <div class="table-responsive">
                            <div class="form-horizontal p-2">
                                <div class="form-group mb-3">
                                    <label class="control-label col-md-2 mb-1"><b>Mã khách hàng:</b></label>
                                    <div class="col-md-12">
                                        @Html.DisplayFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                                <div class="form-group mb-3">
                                    <label class="control-label col-md-2 mb-1"><b>Họ và tên:<span class="text-danger">*</span>:</b></label>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                                <div class="form-group mb-3">
                                    <label class="control-label col-md-2 mb-1"><b>Email:<span class="text-danger">*</span>:</b></label>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                                <div class="form-group mb-3">
                                    <label class="control-label col-md-2 mb-1"><b>Số điện thoại:</b></label>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                                <div class="form-group mb-3">
                                    <label class="control-label col-md-2 mb-1"><b>Địa chỉ:</b></label>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                                <div class="form-group mb-4">
                                    <label class="control-label col-md-2 mb-1"><b>Mật khẩu:</b></label>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-12">
                                        <input type="submit" value="Save" class="btn btn-primary p-2" style="width:20%; color:white" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script>
    function displayImage(input) {
        var fileInput = input;
        var previewImage = document.getElementById('previewImage');

        if (fileInput.files && fileInput.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                previewImage.src = e.target.result;
                previewImage.style.display = 'block';
            };

            reader.readAsDataURL(fileInput.files[0]);
        }
    }
</script>

@section scripts{
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script>
        $(document).ready(function () {
            // Gọi hàm cập nhật số lượng mục trong giỏ hàng khi trang được tải
            updateCartItemCount();

            // Hàm để gọi action và cập nhật số lượng trên giao diện
            function updateCartItemCount() {
                $.ajax({
                    url: '@Url.Action("GetCartItemCount", "ShoppingCart")', // Đường dẫn đến action
                    type: 'GET',
                    success: function (data) {
                        // Xử lý dữ liệu trả về, ở đây có thể làm bất cứ điều gì bạn muốn
                        console.log('Số lượng mục trong giỏ hàng: ' + data.itemCount);

                        // Cập nhật giao diện người dùng với số lượng mới
                        $('#cart_count').text(data.itemCount);
                    },
                    error: function () {
                        console.log('Lỗi khi gọi action');
                    }
                });
            }
        });
    </script>
}